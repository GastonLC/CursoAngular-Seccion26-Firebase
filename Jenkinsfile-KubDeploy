pipeline {
  agent any
  
  stages {    
        
    stage('Desplegar en Kubernetes') {      
      steps {
        withCredentials(bindings: [azureServicePrincipal("Azure-Service-Principal")]) {
           sh 'az login --service-principal -u ${AZURE_CLIENT_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}'
           sh "az aks get-credentials --resource-group SOCIUSRGLAB-RG-MODELODEVOPS-AKS --name ModeloDevOps-AKS --subscription ${AZURE_SUBSCRIPTION_ID}"     
           //sh 'kubectl apply -f GOTY-namespace.yaml'
           sh 'openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout goty-tls-key -out goty-tls-crt -subj "/C=CL"'
           //sh 'kubectl create secret tls goty-tls-secret --cert=goty-tls-crt --key=goty-tls-key -n mi-goty-namespace'
           //sh 'kubectl apply -f GOTY-deployment.yaml'
           //sh 'kubectl apply -f GOTY-ingress.yaml'
           sh 'kubectl apply -k kustomize'
          }
      }
    }
  }
}
