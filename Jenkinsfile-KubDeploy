pipeline {
  agent any
  
  stages {    
        
    stage('Desplegar en Kubernetes') {      
      steps {
        withCredentials(bindings: [azureServicePrincipal("Azure-Service-Principal")]) {
           sh 'az login --service-principal -u ${AZURE_CLIENT_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}'
           sh "az aks get-credentials --resource-group SOCIUSRGLAB-RG-MODELODEVOPS-AKS --name ModeloDevOps-AKS --subscription ${AZURE_SUBSCRIPTION_ID}"     
           sh 'kubectl apply -f GOTY-namespace.yaml'
           sh 'kubectl create secret tls goty-tls-secret --cert=path/to/cert.pem --key=path/to/key.pem -n mi-goty-namespace'
           sh 'kubectl apply -f GOTY-deployment.yaml'
           sh 'kubectl apply -f GOTY-ingress.yaml'
          }
      }
    }
  }
}
