pipeline {
  agent any
  
  environment {
    DOCKERHUB_CREDENTIALS = credentials('DockerHubLoginGLC')
    AZURE_GROUP = ''
    AZURE_PLAN = ''
    AZURE_NAME = ''
    azureServicePrincipalValue = ''
    MY_VARIABLE_VALUE = ''
  }
    
  parameters {
    string(name: 'image_name', defaultValue: 'my-docker-image:latest', description: 'Docker image name and tag')
    string(name: 'tag_image', defaultValue: 'lts', description: 'Tag de la imagen de la pÃ¡gina.')
  } 
  
  stages {

     stage('Chequeo de la rama') {
      steps {
          script {
              AZURE_GROUP1 = "GOTY_RG_$BRANCH_NAME"
              AZURE_GROUP = "${env[AZURE_GROUP1]}"

              AZURE_NAME1 = "GOTY_NAME_$BRANCH_NAME"
              AZURE_NAME = "${env[AZURE_NAME1]}"

              AZURE_PLAN1 = "GOTY_PLAN_$BRANCH_NAME"
              AZURE_PLAN = "${env[AZURE_PLAN1]}"

              azureServicePrincipalValue1 = "ASP_VALUE_$BRANCH_NAME"
              azureServicePrincipalValue =  "${env[azureServicePrincipalValue1]}"

              MY_VARIABLE_VALUE = "2023-${env.BRANCH_NAME}"
             
          }
      }
    }
    
    stage('Azure App Service deploy') {
      steps {
         withCredentials(bindings: [azureServicePrincipal("${azureServicePrincipalValue}")]) {
           sh 'az login --service-principal -u ${AZURE_CLIENT_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}'        
          // sh "az webapp delete -g ${AZURE_GROUP} -n ${AZURE_NAME}"
           sh "az webapp create -g ${AZURE_GROUP} -p ${AZURE_PLAN} -n ${AZURE_NAME} -i ${params.image_name}:${params.tag_image}"
           sh "az webapp config appsettings set --name ${AZURE_NAME} --resource-group ${AZURE_GROUP} --settings MY_VARIABLE=${MY_VARIABLE_VALUE}"
         }
      }
    }
  }
}