name: Construir, Subir a Docker Hub y Desplegar

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del c√≥digo fuente
      uses: actions/checkout@v2
    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    
    - uses: actions/cache@v3
      id: npm-cache      
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node

    - name: Configurar Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.17.0'

    - name: Instalar dependencias y construir
      run: |
        npm install --legacy-peer-deps
        npm run build

    - name: Login Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Subir imagen a Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags:  gastonlc/angularapp:1.0.0-Actions

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Configurar Kubectl
      run: |
        kubectl config set-cluster ModeloDevops-AKS-Reader --server=https://modelodevops-aks-dns-b137e13a.hcp.westeurope.azmk8s.io
        kubectl config set-context ModeloDevops-AKS-Reader --cluster=ModeloDevops-AKS-Reader --namespace=mi-goty-namespace
        kubectl config set-credentials gaston --token=${{ secrets.KUBECTL_TOKEN }}
        kubectl config set-context ModeloDevops-AKS-Reader --user=gaston
        kubectl config use-context ModeloDevOps-AKS-Reader
        kubectl config set clusters.ModeloDevops-AKS-Reader.certificate-authority-data ${{ secrets.KUBECTL_CA }}
        kubectl config get-contexts
          
    - name: Log y Desplegar en Kubernetes
      run: |
        az login --service-principal -u ${{secrets.AZURE_CLIENT_ID}} -p ${{secrets.AZURE_CLIENT_SECRET}} --tenant ${{secrets.AZURE_TENANT_ID}}
        az aks get-credentials --resource-group SOCIUSRGLAB-RG-MODELODEVOPS-AKS --name ModeloDevOps-AKS
        kubectl apply -k ./kustomize